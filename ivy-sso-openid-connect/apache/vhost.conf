<VirtualHost *:80>
  # reverse proxy server name
  ServerName localhost

  # redirect http traffic to https
  Redirect permanent / https://localhost/
</VirtualHost>

<VirtualHost *:443>
  # reverse proxy server name
  ServerName localhost

  # ssl
  SSLEngine On
  SSLCertificateFile /certs/server.crt
  SSLCertificateKeyFile /certs/server.key

  # prevents that this proxy can be misused as forward proxy
  ProxyRequests Off

  # keep host header
  ProxyPreserveHost On
  RequestHeader set X-Forwarded-Proto "https"
  RequestHeader set X-Forwarded-Port "443"

  # target server
  ProxyPass /demo-portal http://ivy:8080/demo-portal

  # rewrite locations headers in the response to the right place
  # should not be needed for ivy in general
  ProxyPassReverse /demo-portal http://ivy:8080/demo-portal

  # redirect to the ivy application
  RedirectMatch 302 ^/$ /demo-portal

  ## openid-connect
  <Location / >
    AuthType openid-connect
    Require valid-user
  </Location>

  # id for our client
  OIDCClientID ivy-server-oidc

  # url for metadata about the idendity provider
  OIDCProviderMetadataURL https://keycloak:8443/realms/ivy-demo/.well-known/openid-configuration

  # turn off cert validation, as we deal with self-signed certs only in this demos
  OIDCSSLValidateServer Off 

  # client secret not needed in this demo
  #OIDCClientSecret secret

  # redirect back to this URL after login performed
  OIDCRedirectURI https://localhost/oidc/

  # passphrase for internal encryption of data
  OIDCCryptoPassphrase 08-15-any-string-which-only-needs-to-be-set-here

  # export claims only as environment variables and do not set all headers
  # (it's more secure, when we select what we want to pass along)
  OIDCPassClaimsAs environment

  # set user as HTTP header
  RequestHeader set X-Forwarded-User %{OIDC_CLAIM_preferred_username}e	
</VirtualHost>
